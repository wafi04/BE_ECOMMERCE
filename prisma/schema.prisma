  // Prisma Schema (dengan tambahan Cart)

  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }

  enum ROLE {
    USER
    ADMIN
  }

  model User {
    id        String    @id @default(cuid())
    name      String    @unique
    email     String    @unique
    password  String
    image     String?
    role    ROLE
    createdAt DateTime  @default(now())

    @@index([email,name])
  }

model Categories {
  id              String       @id @default(cuid())
  name            String
  description     String
  metaTitle       String?
  metaDescription String?
  image           String?
  depth           Int
  
  parentId        String?
  parent          Categories?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children        Categories[] @relation("CategoryHierarchy")
  product  Product[]
  createdAt       DateTime     @default(now())
}



model Product{
  id            String  @id   @default(cuid())
  name          String  
  subTitle      String?
  description   String
  sku           String
  price         Float
  variants      ProductVariant[]
  categoryId    String
  category      Categories    @relation(fields: [categoryId],references: [id],onDelete: Cascade)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model ProductVariant {
  id          String    @id   @default(cuid())
  color       String
  sku         String
  image       ProductImage[]
  inventory   Inventory[]
  productId   String
  product     Product       @relation(fields: [productId], references: [id],onDelete: Cascade)

  @@unique([productId, color,sku])
}


model  ProductImage  {
  id          String   @id   @default(cuid())
  url         String
  variantId   String
  variant     ProductVariant  @relation(fields: [variantId], references: [id],onDelete: Cascade)
  isMain      Boolean   @default(false)
}


model Inventory {
  id              String          @id @default(cuid())
  variantId       String
  variant         ProductVariant  @relation(fields: [variantId], references: [id],onDelete: Cascade)
  size            String
  stock           Int
  reservedStock   Int             @default(0)
  availableStock  Int             @default(0)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

  